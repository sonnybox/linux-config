# Execute your favorite apps at launch

exec-once = swaybg -i ~/mojave_dynamic/mojave_dynamic_14.jpeg -m center
exec-once = wl-paste --type text --watch cliphist store
exec-once = wl-paste --type image --watch cliphist store
exec-once = hyprshade on colorgrade
exec-once = easyeffects --gapplication-service
exec-once = /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 

# Source a file (multi-file configs)

#source = ~/.config/hypr/server.conf
monitor=,highrr,auto,2,bitdepth,10

# Set programs that you use
$terminal = alacritty
$fileManager = nautilus
$menu = rofi -show drun
$browser = google-chrome-stable

# Some default env vars.
env = XCURSOR_SIZE,24
env = GTK_THEME=Adw-dark

dwindle {
    # See https://wiki.hyprland.org/Configuring/Dwindle-Layout/
    pseudotile = yes # master switch for pseudotiling
    preserve_split = yes # you probably want this
}

# Example per-device config
# device:elan-touchpad {
#    sensitivity = 0.1
#    natural_scroll = true
# }

# See https://wiki.hyprland.org/Configuring/Keywords/ for more
$mainMod = SUPER

# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
bind = $mainMod, RETURN, exec, $terminal
bind = $mainMod, Q, killactive, 
bind = $mainMod, M, exit,
bind = $mainMod, C, exec, $browser
bind = $mainMod, E, exec, $fileManager
bind = $mainMod, F, togglefloating,
bind = $mainMod, R, exec, hyprshade on colorgrade
bind = $mainMod, SPACE, exec, $menu
bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod SHIFT, S, togglesplit, # dwindle
bind = ,XF86MonBrightnessUp, exec, brightnessctl set 22+
bind = ,XF86MonBrightnessDown, exec, brightnessctl set 22-
bind = ,XF86AudioPlay, exec, playerctl play-pause
bind = ,XF86AudioStop, exec, playerctl stop
bind = ,XF86AudioPrev, exec, playerctl previous
bind = ,XF86AudioNext, exec, playerctl next
bind = SHIFT,XF86AudioPrev, exec, playerctl position 10-
bind = SHIFT,XF86AudioNext, exec, playerctl position 10+
bind = ,XF86AudioMute, exec, pamixer -t
bind = ,XF86AudioLowerVolume, exec, pamixer -d 5
bind = ,XF86AudioRaiseVolume, exec, pamixer -i 5


# Move focus with mainMod + arrow keys
bind = $mainMod, A, movefocus, l
bind = $mainMod, D, movefocus, r
bind = $mainMod, W, movefocus, u
bind = $mainMod, S, movefocus, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Example special workspace (scratchpad)
# bind = $mainMod, F, togglespecialworkspace, magic
# bind = $mainMod SHIFT, F, movetoworkspace, special:magic

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

general {
    # mouse sensitivity (legacy, may cause bugs if not 1, prefer input:sensitivity)
    # type: float
    # default: 1.0
    sensitivity = 1.0

    # size of the border around windows
    # type: int
    # default: 1
    border_size = 1

    # disable borders for floating windows
    # type: bool
    # default: false
    no_border_on_floating = false

    # gaps between windows
    # type: int
    # default: 5
    gaps_in = 5

    # gaps between windows and monitor edges
    # type: int
    # default: 20
    gaps_out = 10

    # gaps between workspaces. Stacks with gaps_out.
    # type: int
    # default: 0
    gaps_workspaces = 480

    # border color for inactive windows
    # type: gradient
    # default: 0xffffffff
    col.inactive_border = 0xff555555

    # border color for the active window
    # type: gradient
    # default: 0xff444444
    col.active_border = 0xff999999

    # inactive border color for window that cannot be added to a group (see denywindowfromgroup dispatcher)
    # type: gradient
    # default: 0xffffaaff
    col.nogroup_border = 0xffffaaff

    # active border color for window that cannot be added to a group
    # type: gradient
    # default: 0xffff00ff
    col.nogroup_border_active = 0xffff00ff

    # in seconds, after how many seconds of cursor’s inactivity to hide it. Set to 0 for never.
    # type: int
    # default: 0
    cursor_inactive_timeout = 0

    # which layout to use. (Available: dwindle, master)
    # type: str
    # default: dwindle
    layout = dwindle

    # if true, will not warp the cursor in many cases (focusing, keybinds, etc)
    # type: bool
    # default: false
    no_cursor_warps = false

    # if true, will not fall back to the next available window when moving focus in a direction where no window was found
    # type: bool
    # default: false
    no_focus_fallback = false

    # if on, will also apply the sensitivity to raw mouse output (e.g. sensitivity in games) NOTICE: really not recommended.
    # type: bool
    # default: false
    apply_sens_to_raw = false

    # enables resizing windows by clicking and dragging on borders and gaps
    # type: bool
    # default: false
    resize_on_border = true

    # extends the area around the border where you can click and drag on, only used when general:resize_on_border is on.
    # type: int
    # default: 15
    extend_border_grab_area = 15

    # show a cursor icon when hovering over borders, only used when general:resize_on_border is on.
    # type: bool
    # default: true
    hover_icon_on_border = true

    # master switch for allowing tearing to occur. See the Tearing page.
    # type: bool
    # default: false
    allow_tearing = true
}

decoration {
    # rounded corners’ radius (in layout px)
    # type: int
    # default: 0
    rounding = 8

    # opacity of active windows. (0.0 - 1.0)
    # type: float
    # default: 1.0
    active_opacity = 1.0

    # opacity of inactive windows. (0.0 - 1.0)
    # type: float
    # default: 1.0
    inactive_opacity = 1.0

    # opacity of fullscreen windows. (0.0 - 1.0)
    # type: float
    # default: 1.0
    fullscreen_opacity = 1.0

    # enable drop shadows on windows
    # type: bool
    # default: true
    drop_shadow = false

    # Shadow range (“size”) in layout px
    # type: int
    # default: 4
    shadow_range = 8

    # (1 - 4), in what power to render the falloff (more power, the faster the falloff)
    # type: int
    # default: 3
    shadow_render_power = 1

    # if true, the shadow will not be rendered behind the window itself, only around it.
    # type: bool
    # default: true
    shadow_ignore_window = true

    # shadow’s color. Alpha dictates shadow’s opacity.
    # type: color
    # default: 0xee1a1a1a
    col.shadow = 0xff000000

    # inactive shadow color. (if not set, will fall back to col.shadow)
    # type: color
    # default: unset
    # col.shadow_inactive = ?

    # shadow’s rendering offset.
    # type: vec2
    # default: [0, 0]
    # shadow_offset = [0, 0]

    # shadow’s scale. 0.0 - 1.0
    # type: float
    # default: 1.0
    shadow_scale = 1.0

    # enables dimming of inactive windows
    # type: bool
    # default: false
    dim_inactive = false

    # how much inactive windows should be dimmed, 0.0 - 1.0
    # type: float
    # default: 0.5
    dim_strength = 0.5

    # how much to dim the rest of the screen by when a special workspace is open. 0.0 - 1.0
    # type: float
    # default: 0.2
    dim_special = 0.2

    # how much the dimaround window rule should dim by. 0.0 - 1.0
    # type: float
    # default: 0.4
    dim_around = 0.4

    # a path to a custom shader to be applied at the end of rendering. See examples/screenShader.frag for an example.
    # type: str
    # default: [[Empty]]
    # screen_shader = ?

	blur {
		# enable kawase window background blur
		# type: bool
		# default: true
		enabled = true

		# blur size (distance)
		# type: int
		# default: 8
		size = 4

		# the amount of passes to perform
		# type: int
		# default: 1
		passes = 2

		# make the blur layer ignore the opacity of the window
		# type: bool
		# default: false
		ignore_opacity = false

		# whether to enable further optimizations to the blur. Recommended to leave on, as it will massively improve performance.
		# type: bool
		# default: true
		new_optimizations = true

		# if enabled, floating windows will ignore tiled windows in their blur. Only available if blur_new_optimizations is true. Will reduce overhead on floating blur significantly.
		# type: bool
		# default: false
		xray = true

		# how much noise to apply. 0.0 - 1.0
		# type: float
		# default: 0.0117
		noise = 0.02

		# contrast modulation for blur. 0.0 - 2.0
		# type: float
		# default: 0.8916
		contrast = 1

		# brightness modulation for blur. 0.0 - 2.0
		# type: float
		# default: 0.8172
		brightness = 0.4

		# Increase saturation of blurred colors. 0.0 - 1.0
		# type: float
		# default: 0.1696
		vibrancy = 0.0

		# How strong the effect of vibrancy is on dark areas . 0.0 - 1.0
		# type: float
		# default: 0.0
		vibrancy_darkness = 0.0

		# whether to blur behind the special workspace (note: expensive)
		# type: bool
		# default: false
		special = false
	}
}

animations {
    # enable animations
    # type: bool
    # default: true
    enabled = true

    # enable first launch animation
    # type: bool
    # default: true
    first_launch_animation = true

    # animation=NAME,ONOFF,SPEED,CURVE
    animation=global,1,4,default
}

input {
    # Appropriate XKB keymap parameter
    # type: str
    # default: us
    kb_layout = us

    numlock_by_default = true

    # The repeat rate for held-down keys, in repeats per second.
    # type: int
    # default: 25
    repeat_rate = 40

    # Delay before a held-down key is repeated, in milliseconds.
    # type: int
    # default: 600
    repeat_delay = 400

    # Sets the mouse input sensitivity. Value will be clamped to the range -1.0 to 1.0.
    # type: float
    # default: 0.0
    sensitivity = 0.0

    # Sets the cursor acceleration profile. Can be one of adaptive, flat. Can also be custom, see below. Leave empty to use libinput’s default mode for your input device.
    # type: str
    # default: [[Empty]]
    # accel_profile = flat

    # Force no cursor acceleration. This bypasses most of your pointer settings to get as raw of a signal as possible. Enabling this is not recommended due to potential cursor desynchronization.
    # type: bool
    # default: false
    force_no_accel = false

    # Switches RMB and LMB
    # type: bool
    # default: false
    left_handed = false

    # Sets the scroll acceleration profile, when accel_profile is set to custom. Has to be in the form <step> <points>. Leave empty to have a flat scroll curve.
    # type: str
    # default: [[Empty]]
    # scroll_points = ?

    # Sets the scroll method. Can be one of 2fg (2 fingers), edge, on_button_down, no_scroll.
    # type: str
    # default: [[Empty]]
    # scroll_method = ?

    # Sets the scroll button. Has to be an int, cannot be a string. Check wev if you have any doubts regarding the ID. 0 means default.
    # type: int
    # default: 0
    scroll_button = 0

    # If the scroll button lock is enabled, the button does not need to be held down. Pressing and releasing the button once enables the button lock, the button is now considered logically held down. Pressing and releasing the button a second time logically releases the button. While the button is logically held down, motion events are converted to scroll events.
    # type: bool
    # default: 0
    scroll_button_lock = 0

    # Inverts scrolling direction. When enabled, scrolling moves content directly instead of manipulating a scrollbar.
    # type: bool
    # default: false
    natural_scroll = false

    # (0/1/2/3) Specify if and how cursor movement should affect window focus. See the note below.
    # type: int
    # default: 1
    follow_mouse = 1

    # If disabled and follow_mouse=1 then mouse focus will not switch to the hovered window unless the mouse crosses a window boundary.
    # type: bool
    # default: true
    mouse_refocus = true

    # If enabled (1 or 2), focus will change to the window under the cursor when changing from tiled-to-floating and vice versa. If 2, focus will also follow mouse on float-to-float switches.
    # type: int
    # default: 1
    float_switch_override_focus = 1

    touchpad {
		# Disable the touchpad while typing.
		# type: bool
		# default: true
		disable_while_typing = true

		# Inverts scrolling direction. When enabled, scrolling moves content directly instead of manipulating a scrollbar.
		# type: bool
		# default: false
		natural_scroll = true

		# Multiplier applied to the amount of scroll movement.
		# type: float
		# default: 1.0
		scroll_factor = 0.2

		# Sending LMB and RMB simultaneously will be interpreted as a middle click. This disables any touchpad area that would normally send a middle click based on location.
		# type: bool
		# default: false
		middle_button_emulation = false

		# Button presses with 1, 2, or 3 fingers will be mapped to LMB, RMB, and MMB respectively. This disables interpretation of clicks based on location on the touchpad.
		# type: bool
		# default: false
		clickfinger_behavior = true

		# Tapping on the touchpad with 1, 2, or 3 fingers will send LMB, RMB, and MMB respectively.
		# type: bool
		# default: true
		tap-to-click = true

		# When enabled, lifting the finger off for a short time while dragging will not drop the dragged item.
		# type: bool
		# default: false
		drag_lock = false

		# Sets the tap and drag mode for the touchpad
		# type: bool
		# default: false
		tap-and-drag = true
	}
}

gestures {
    workspace_swipe = true
    workspace_swipe_fingers = 3
    workspace_swipe_distance = 480
    workspace_swipe_invert = true
    workspace_swipe_min_speed_to_force = 5
    workspace_swipe_cancel_ratio = 0.1
    workspace_swipe_create_new = true
    workspace_swipe_direction_lock = true
    workspace_swipe_direction_lock_threshold = 10
}

misc {
    disable_hyprland_logo = true
    disable_splash_rendering = false
    vfr = true
    vrr = 1    
    animate_manual_resizes = true
    animate_mouse_windowdragging = true
    disable_autoreload = true
}
